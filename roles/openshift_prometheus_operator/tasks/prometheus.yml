---
- name: '[PROMETHEUS] Set to the PrometheusRules CRD'
  k8s:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    namespace: "{{ namespace }}"
    definition:
      metadata:
        name: prometheusrules.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: PrometheusRule
          listKind: PrometheusRuleList
          plural: prometheusrules
          singular: prometheusrule
        scope: Namespaced
        version: v1

- name: '[PROMETHEUS] Set to the ServiceMonitors CRD'
  k8s:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition 
    namespace: "{{ namespace }}"
    definition:
      metadata:
        name: servicemonitors.monitoring.coreos.com
      spec:        
        group: monitoring.coreos.com
        names:
          kind: ServiceMonitor
          listKind: ServiceMonitorList
          plural: servicemonitors
          singular: servicemonitor 
        scope: Namespaced
        version: v1

- name: '[PROMETHEUS] Set to the Prometheuses CRD'
  k8s:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    namespace: "{{ namespace }}"
    definition:
      metadata:
        name: prometheuses.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: Prometheus
          listKind: PrometheusList
          plural: prometheuses
          singular: prometheus
        scope: Namespaced
        version: v1

- name: '[PROMETHEUS] Set to the AlertManagers CRD'
  k8s:
    api_version: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    namespace: "{{ namespace }}"
    definition:
      metadata:
        name: alertmanagers.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: Alertmanager
          listKind: AlertmanagerList
          plural: alertmanagers
          singular: alertmanager
        scope: Namespaced
        version: v1

- name: '[PROMETHEUS] Set to the Prometheus Operator RoleBinding'
  k8s:
    api_version: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    namespace: "{{ namespace }}"
    definition:
      metadata:
        name: prometheus-operator
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: prometheus-operator
      subjects:
      - kind: ServiceAccount
        name: prometheus-operator
        namespace: "{{ namespace }}"

- name: '[PROMETHEUS] Set to the Prometheus Operator Role'
  k8s:
    api_version: rbac.authorization.k8s.io/v1
    kind: Role
    namespace: "{{ namespace }}"
    definition:
      metadata:
        name: prometheus-operator
      rules:
      - apiGroups:
        - apiextensions.k8s.io
        resources:
        - customresourcedefinitions
        verbs:
        - '*'
      - apiGroups:
        - monitoring.coreos.com
        resources:
        - alertmanagers
        - prometheuses
        - prometheuses/finalizers
        - alertmanagers/finalizers
        - servicemonitors
        - prometheusrules
        verbs:
        - '*'
      - apiGroups:
        - apps
        resources:
        - statefulsets
        verbs:
        - '*'
      - apiGroups:
        - ""
        resources:
        - configmaps
        - secrets
        verbs:
        - '*'
      - apiGroups:
        - ""
        resources:
        - pods
        verbs:
        - list
        - delete
      - apiGroups:
        - ""
        resources:
        - services
        - endpoints
        verbs:
        - get
        - create
        - update
      - apiGroups:
        - ""
        resources:
        - nodes
        verbs:
        - list
        - watch
      - apiGroups:
        - ""
        resources:
        - namespaces
        verbs:
        - list
        - watch

- name: '[PROMETHEUS] Set to the prometheus-operator deployment'
  k8s:
    api_version: apps/v1beta2
    kind: Deployment
    definition:
      metadata:
        labels:
          k8s-app: prometheus-operator
        name: prometheus-operator
        namespace: "{{ namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            k8s-app: prometheus-operator
        template:
          metadata:
            labels:
              k8s-app: prometheus-operator
          spec:
            containers:
            - args:
              - --manage-crds=false
              - --namespace={{namespace}}
              - --logtostderr=true
              - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
              - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader:v0.23.2
              image: quay.io/coreos/prometheus-operator:v0.23.2
              name: prometheus-operator
              ports:
              - containerPort: 8080
                name: http
              resources:
                limits:
                  cpu: 200m
                  memory: 200Mi
                requests:
                  cpu: 100m
                  memory: 100Mi
            serviceAccountName: prometheus-operator

- name: '[PROMETHEUS] Set to prometheus-operator ServiceAccount'
  k8s:
    api_version: v1
    kind: ServiceAccount
    definition:
      metadata:
        name: prometheus-operator
        namespace: "{{ namespace }}"

- name: '[PROMETHEUS] Set to Prometheus'
  k8s:
    api_version: monitoring.coreos.com/v1
    kind: Prometheus
    definition:
      metadata:
        name: prometheus
        namespace: "{{ namespace }}"
      spec:
        serviceAccountName: prometheus
        serviceMonitorSelector:
          matchLabels:
            team: frontend
        resources:
          requests:
            memory: 400Mi

- name: '[PROMETHEUS] Set to Prometheus Service'
  k8s:
    api_version: v1
    kind: Service
    definition: 
      metadata:
        name: prometheus
        namespace: "{{ namespace }}"
      spec:
        type: NodePort
        ports:
        - name: web
          nodePort: 30900
          port: 9090
          protocol: TCP
          targetPort: web
        selector:
          prometheus: prometheus

- name: '[PROMETHEUS] Set to Prometheus ServiceAccount'
  k8s:
    api_version: v1
    kind: ServiceAccount
    definition:
      metadata:
        name: prometheus
        namespace: "{{ namespace }}"

- name: '[PROMETHEUS] Set to Prometheus Role'
  k8s:
    kind: Role
    api_version: rbac.authorization.k8s.io/v1
    definition:
      metadata:
        namespace: "{{ namespace }}"
        name: prometheus
      rules:
      - apiGroups: [""]
        resources:
        - nodes
        - nodes/proxy
        - services
        - endpoints
        - pods
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources:
        - configmaps
        verbs: ["get"]

- name: '[PROMETHEUS] Set to Prometheus RoleBinding'
  k8s:
    api_version: rbac.authorization.k8s.io/v1beta1
    kind: RoleBinding
    definition:
      metadata:
        name: prometheus
        namespace: "{{ namespace }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: prometheus
      subjects:
      - kind: ServiceAccount
        name: prometheus
        namespace: "{{ namespace }}"

- name: '[PROMETHEUS] Set to Prometheus RoleBinding'
  k8s:
    kind: Service
    api_version: v1
    definition:
      metadata:
        name: foobar
        namespace: "{{ namespace }}"
        labels:
          app: foobar
      spec:
        selector:
          app: foobar
        ports:
        - name: web
          port: 9779
